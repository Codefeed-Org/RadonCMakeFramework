get_filename_component(packagemanager_dir "${RCF_PATH}/intern/packages/" ABSOLUTE)

set(RCF_ADDED_PACKAGES "" CACHE INTERNAL "")

function(rcf_addpackage packagename)
  if(${packagename} IN_LIST RCF_ADDED_PACKAGES)
    return()
  else()
    set(RCF_ADDED_PACKAGES "${RCF_ADDED_PACKAGES};${packagename}" CACHE INTERNAL "")
  endif()

  set(package_version "newest")
  if(${ARGC} EQUAL 2)
    set(package_version ${ARGV1})
  endif()

  set(package_file "")
  if(EXISTS "${packagemanager_dir}/${packagename}.cmake")
    message(STATUS "Looking for ${packagename} in the repo: found")
    set(package_file "${packagemanager_dir}/${packagename}.cmake")
    set(package_protocol "")
    set(package_source "")
    set(package_revision "")
    include("${packagemanager_dir}/${packagename}.cmake")    
  else()
    message("Looking for ${packagename} in the repo: not found")
  endif()
  
  if(NOT ${package_protocol} STREQUAL "")
    rcf_addlocation(${packagename}${package_version} ${package_protocol} ${package_source})
    if(NOT ${package_revision} STREQUAL "")
      rcf_obtain_project(${packagename}${package_version} outdir ${package_revision})      
    else()
      rcf_obtain_project(${packagename}${package_version} outdir)
    endif()

    build_package(${outdir})
  endif()
endfunction()